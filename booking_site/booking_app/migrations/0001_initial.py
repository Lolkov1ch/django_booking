# Generated by Django 5.2.6 on 2025-09-06 10:06

import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='RoomCategory',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('name', models.CharField(max_length=100, unique=True, verbose_name='Назва')),
                ('capacity', models.PositiveSmallIntegerField(default=1, verbose_name='Місткість, осіб')),
                ('price_per_night', models.DecimalField(decimal_places=2, max_digits=8, verbose_name='Ціна за ніч')),
                ('description', models.TextField(blank=True, verbose_name='Опис')),
                ('is_active', models.BooleanField(default=True, verbose_name='Активна')),
            ],
            options={
                'verbose_name': 'Категорія кімнати',
                'verbose_name_plural': 'Категорії кімнат',
                'db_table': 'room_category',
                'ordering': ['name'],
                'abstract': False,
                'indexes': [models.Index(fields=['name'], name='room_catego_name_96112b_idx')],
            },
        ),
        migrations.CreateModel(
            name='Room',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('number', models.CharField(max_length=10, unique=True, verbose_name='Room Number')),
                ('floor', models.IntegerField(verbose_name='Floor')),
                ('capacity', models.PositiveIntegerField(verbose_name='Capacity')),
                ('is_active', models.BooleanField(default=True, verbose_name='Доступна для бронювання')),
                ('category', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='rooms', to='booking_app.roomcategory')),
            ],
            options={
                'verbose_name': 'Room',
                'verbose_name_plural': 'Rooms',
                'ordering': ['number'],
            },
        ),
        migrations.CreateModel(
            name='Booking',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('check_in', models.DateField(verbose_name='Заїзд')),
                ('check_out', models.DateField(verbose_name='Виїзд')),
                ('status', models.CharField(choices=[('pending', 'Очікує'), ('confirmed', 'Підтверджено'), ('canceled', 'Скасовано')], default='pending', max_length=10, verbose_name='Статус')),
                ('comment', models.TextField(blank=True, verbose_name='Коментар')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='bookings', to=settings.AUTH_USER_MODEL, verbose_name='Користувач')),
                ('room', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='bookings', to='booking_app.room', verbose_name='Кімната')),
            ],
            options={
                'verbose_name': 'Бронювання',
                'verbose_name_plural': 'Бронювання',
                'db_table': 'booking',
                'ordering': ['-created_at'],
                'abstract': False,
                'indexes': [models.Index(fields=['room', 'check_in', 'check_out'], name='booking_room_id_48010f_idx'), models.Index(fields=['status'], name='booking_status_b99f68_idx'), models.Index(fields=['user'], name='booking_user_id_acf7f7_idx')],
                'constraints': [models.CheckConstraint(condition=models.Q(('check_out__gt', models.F('check_in'))), name='check_out_gt_check_in')],
            },
        ),
    ]
